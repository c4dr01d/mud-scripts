#nop vim: set filetype=tintin:;
#function {boolAnd} {
    #if { "%1" == "true" && "%2" == "true" } {
        #return {true};
    };
    #return {false};
};
#function {reverseList} {
    #var l {%1};
    #list {l} size len;
    #list {result} create {};
    #loop $len 1 {idx} {
        #list {result} add $1[$idx];
    };
};
#function {eval} {
    #math result {%1};
};
#function {str2list} {
    #list result {create} {%1};
};
#function {list2str} {
    #var l {%1};
    #list l simplify;
    #return {$l};
};
#function {strListSize} {
    #list l create {%1};
    #list l size result;
};
#function {indexOfStrList} {
    #list l create {%1};
    #list l find {%2} result;
};
#function {indexOf} {
    #var l {%1};
    #list l find {%2} result;
};
#function {trim} {
    #format {result} {%p} {%1};
};
#function {trimAll} {
    #var result {%1};
    #replace {result} { } {};
};
#function {sort} {
    #var l {%0};
    #var result {};
    #foreach {$l} {tmp} {
        #list result {sort} {$tmp};
    };
    #return {@list2str{{$result}}};
};
#function {sortList} {
    #var l {@list2str{{%0}}};
    #var result {};
    #foreach {$l} {tmp} {
        #list result {sort} {$tmp};
    };
};
#function {listSize} {
    #var l {%1};
    #list l size result;
};
#function {listSet} {
    #var l {%1};
    #loc idx {%2};
    #loc data {%3};
    #var l @listExtend{{$l};$idx};
    #list l set {$idx} {$data};
    #return {$l};
};
#function {listExtend} {
    #var l {%1};
    #loc len {%2};
    #loc size {@listSize{{$l}}};
    #math len {$len - $size};
    #if { $len > 0 } {
        #loop {1} {$len} {id} {
            #list l add {{}};
        };
    };
    #return {$l};
};
#function {len} {
    #format result {%L} {%1};
};
#function {toLower} {
    #format result {%l} {%1};
};
#function {toUpper} {
    #format result {%u} {%1};
};
#function {capital} {
    #format result {%n} {%1};
};
#function {replace} {
    #var result %1;
    #replace result {%2} {%3};
};
#function {inList} {
    #math result { @indexOf{{%1};{%2}} > 0 };
};
#function {center} {
    #format len {%L} {%1};
    #math left {(%2 - $len) / 2 + $len};
    #math right { %2 - $left };
    #format result {%${left}s%${right}s} {%1} {};
};
#function {max} {
    #var result {%1};
    #foreach {%0} {i} {
        #if { $i > $result } {
            #var result {$i};
        };
    };
};
#function {min} {
    #var result {%1};
    #foreach {%0} {i} {
        #if { $i < $result } {
            #var result {$i};
        };
    };
};
